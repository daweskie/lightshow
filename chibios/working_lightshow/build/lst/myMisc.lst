   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"myMisc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.SDU1,"aw",%nobits
  20              		.align	2
  23              	SDU1:
  24 0000 00000000 		.space	600
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 6D656D00 		.ascii	"mem\000"
  29              		.align	2
  30              	.LC1:
  31 0004 74687265 		.ascii	"threads\000"
  31      61647300 
  32              		.align	2
  33              	.LC2:
  34 000c 626C696E 		.ascii	"blinkspeed\000"
  34      6B737065 
  34      656400
  35 0017 00       		.align	2
  36              	.LC3:
  37 0018 627300   		.ascii	"bs\000"
  38 001b 00       		.align	2
  39              	.LC4:
  40 001c 64697200 		.ascii	"dir\000"
  41              		.align	2
  42              	.LC5:
  43 0020 64697263 		.ascii	"dirch\000"
  43      6800
  44 0026 0000     		.align	2
  45              	.LC6:
  46 0028 61637475 		.ascii	"actual\000"
  46      616C00
  47 002f 00       		.align	2
  48              	.LC7:
  49 0030 62736D69 		.ascii	"bsmin\000"
  49      6E00
  50 0036 0000     		.align	2
  51              	.LC8:
  52 0038 62736D61 		.ascii	"bsmax\000"
  52      7800
  53 003e 0000     		.align	2
  54              	.LC9:
  55 0040 62736D69 		.ascii	"bsminch\000"
  55      6E636800 
  56              		.align	2
  57              	.LC10:
  58 0048 62736D61 		.ascii	"bsmaxch\000"
  58      78636800 
  59              		.section	.rodata.commands,"a",%progbits
  60              		.align	2
  63              	commands:
  64 0000 00000000 		.word	.LC0
  65 0004 00000000 		.word	cmd_mem
  66 0008 04000000 		.word	.LC1
  67 000c 00000000 		.word	cmd_threads
  68 0010 0C000000 		.word	.LC2
  69 0014 00000000 		.word	cmd_blinkspeed
  70 0018 18000000 		.word	.LC3
  71 001c 00000000 		.word	cmd_blinkspeed
  72 0020 1C000000 		.word	.LC4
  73 0024 00000000 		.word	cmd_way
  74 0028 20000000 		.word	.LC5
  75 002c 00000000 		.word	cmd_way_ch
  76 0030 28000000 		.word	.LC6
  77 0034 00000000 		.word	cmd_blinkspeed_now
  78 0038 30000000 		.word	.LC7
  79 003c 00000000 		.word	cmd_blinkspeed_min
  80 0040 38000000 		.word	.LC8
  81 0044 00000000 		.word	cmd_blinkspeed_max
  82 0048 40000000 		.word	.LC9
  83 004c 00000000 		.word	cmd_blinkspeed_min_ch
  84 0050 48000000 		.word	.LC10
  85 0054 00000000 		.word	cmd_blinkspeed_max_ch
  86 0058 00000000 		.word	0
  87 005c 00000000 		.word	0
  88              		.section	.rodata.shell_cfg1,"a",%progbits
  89              		.align	2
  92              	shell_cfg1:
  93 0000 00000000 		.word	SDU1
  94 0004 00000000 		.word	commands
  95              		.section	.bss.waThread1,"aw",%nobits
  96              		.align	3
  99              	waThread1:
 100 0000 00000000 		.space	440
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.section	.rodata
 102              		.align	2
 103              	.LC11:
 104 0050 626C696E 		.ascii	"blinker1\000"
 104      6B657231 
 104      00
 105 0059 000000   		.section	.text.Thread1,"ax",%progbits
 106              		.align	2
 107              		.p2align 4,,15
 108              		.thumb
 109              		.thumb_func
 111              	Thread1:
 112              	.LFB118:
 113              		.file 1 "myMisc.c"
   1:myMisc.c      **** #include <stdlib.h>
   2:myMisc.c      **** #include <string.h>
   3:myMisc.c      **** #include <ctype.h>
   4:myMisc.c      **** 
   5:myMisc.c      **** #include "ch.h"
   6:myMisc.c      **** #include "hal.h"
   7:myMisc.c      **** 
   8:myMisc.c      **** #include "chprintf.h"
   9:myMisc.c      **** 
  10:myMisc.c      **** #include "myMisc.h"
  11:myMisc.c      **** #include "config.h"
  12:myMisc.c      **** #include "menu.h"
  13:myMisc.c      **** #include <chsem.h>
  14:myMisc.c      **** 
  15:myMisc.c      **** 
  16:myMisc.c      **** /*===========================================================================*/
  17:myMisc.c      **** /* Generic code.															 */
  18:myMisc.c      **** /*===========================================================================*/
  19:myMisc.c      **** 
  20:myMisc.c      **** /* Virtual serial port over USB.*/
  21:myMisc.c      **** static SerialUSBDriver SDU1;
  22:myMisc.c      **** 
  23:myMisc.c      **** 
  24:myMisc.c      **** /*
  25:myMisc.c      ****  * Lightshow thread, times are in milliseconds.
  26:myMisc.c      ****  */
  27:myMisc.c      **** static WORKING_AREA(waThread1, 128);
  28:myMisc.c      **** 
  29:myMisc.c      **** static msg_t Thread1(void *arg)
  30:myMisc.c      **** {
 114              		.loc 1 30 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 32
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 00B5     		push	{lr}
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 14, -4
 121 0002 89B0     		sub	sp, sp, #36
 122              		.cfi_def_cfa_offset 40
 123 0004 0190     		str	r0, [sp, #4]
  31:myMisc.c      ****     (void)arg;
  32:myMisc.c      ****     chRegSetThreadName("blinker1");
 124              		.loc 1 32 0
 125 0006 4A4B     		ldr	r3, .L8
 126 0008 9B69     		ldr	r3, [r3, #24]
 127 000a 4A4A     		ldr	r2, .L8+4
 128 000c 9A61     		str	r2, [r3, #24]
  33:myMisc.c      **** 
  34:myMisc.c      **** 
  35:myMisc.c      **** 
  36:myMisc.c      ****     int leds[] = { led1 , led2 , led3 , led4 };
 129              		.loc 1 36 0
 130 000e 4A4B     		ldr	r3, .L8+8
 131 0010 1B68     		ldr	r3, [r3]
 132 0012 0293     		str	r3, [sp, #8]
 133 0014 494B     		ldr	r3, .L8+12
 134 0016 1B68     		ldr	r3, [r3]
 135 0018 0393     		str	r3, [sp, #12]
 136 001a 494B     		ldr	r3, .L8+16
 137 001c 1B68     		ldr	r3, [r3]
 138 001e 0493     		str	r3, [sp, #16]
 139 0020 484B     		ldr	r3, .L8+20
 140 0022 1B68     		ldr	r3, [r3]
 141 0024 0593     		str	r3, [sp, #20]
  37:myMisc.c      ****     int curLed = 0;
 142              		.loc 1 37 0
 143 0026 0023     		movs	r3, #0
 144 0028 0793     		str	r3, [sp, #28]
 145              	.L7:
 146              	.LBB2:
  38:myMisc.c      ****     while (TRUE)
  39:myMisc.c      ****     {
  40:myMisc.c      ****         chThdSleepMilliseconds(20);
 147              		.loc 1 40 0
 148 002a BF20     		movs	r0, #191
 149 002c FFF7FEFF 		bl	chThdSleep
  41:myMisc.c      ****         if (presses == 1)
 150              		.loc 1 41 0
 151 0030 454B     		ldr	r3, .L8+24
 152 0032 1B68     		ldr	r3, [r3]
 153 0034 012B     		cmp	r3, #1
 154 0036 24D1     		bne	.L2
  42:myMisc.c      ****         {
  43:myMisc.c      ****             presses = 0;
 155              		.loc 1 43 0
 156 0038 434B     		ldr	r3, .L8+24
 157 003a 0022     		movs	r2, #0
 158 003c 1A60     		str	r2, [r3]
 159              	.LBB3:
  44:myMisc.c      ****             chBSemSignal(&my_bsem);
 160              		.loc 1 44 0
 161 003e 2023     		movs	r3, #32
 162              	@ 44 "myMisc.c" 1
 163 0040 83F31188 		msr     BASEPRI, r3
 164              	@ 0 "" 2
 165              		.thumb
 166              	.LBE3:
 167 0044 FFF7FEFF 		bl	dbg_check_lock
 168 0048 404B     		ldr	r3, .L8+28
 169 004a 9B68     		ldr	r3, [r3, #8]
 170 004c 002B     		cmp	r3, #0
 171 004e 02DC     		bgt	.L3
 172              		.loc 1 44 0 is_stmt 0 discriminator 1
 173 0050 3E48     		ldr	r0, .L8+28
 174 0052 FFF7FEFF 		bl	chSemSignalI
 175              	.L3:
 176              		.loc 1 44 0 discriminator 2
 177 0056 FFF7FEFF 		bl	chSchRescheduleS
 178 005a FFF7FEFF 		bl	dbg_check_unlock
 179              	.LBB4:
 180 005e 0023     		movs	r3, #0
 181              	@ 44 "myMisc.c" 1
 182 0060 83F31188 		msr     BASEPRI, r3
 183              	@ 0 "" 2
 184              		.thumb
 185              	.LBE4:
  45:myMisc.c      ****             if(dir == 1)
 186              		.loc 1 45 0 is_stmt 1 discriminator 2
 187 0064 3A4B     		ldr	r3, .L8+32
 188 0066 1B68     		ldr	r3, [r3]
 189 0068 012B     		cmp	r3, #1
 190 006a 03D1     		bne	.L4
  46:myMisc.c      ****             {
  47:myMisc.c      ****                 dir = 0;
 191              		.loc 1 47 0
 192 006c 384B     		ldr	r3, .L8+32
 193 006e 0022     		movs	r2, #0
 194 0070 1A60     		str	r2, [r3]
 195 0072 06E0     		b	.L2
 196              	.L4:
  48:myMisc.c      ****             }
  49:myMisc.c      ****             else if(dir == 0)
 197              		.loc 1 49 0
 198 0074 364B     		ldr	r3, .L8+32
 199 0076 1B68     		ldr	r3, [r3]
 200 0078 002B     		cmp	r3, #0
 201 007a 02D1     		bne	.L2
  50:myMisc.c      ****             {
  51:myMisc.c      ****                 dir = 1;
 202              		.loc 1 51 0
 203 007c 344B     		ldr	r3, .L8+32
 204 007e 0122     		movs	r2, #1
 205 0080 1A60     		str	r2, [r3]
 206              	.L2:
  52:myMisc.c      ****             }
  53:myMisc.c      ****         }
  54:myMisc.c      **** 
  55:myMisc.c      ****         int i = 0;
 207              		.loc 1 55 0
 208 0082 0023     		movs	r3, #0
 209 0084 0693     		str	r3, [sp, #24]
  56:myMisc.c      **** 
  57:myMisc.c      ****         palSetPad(GPIOD, leds[ curLed ]);
 210              		.loc 1 57 0
 211 0086 334A     		ldr	r2, .L8+36
 212 0088 079B     		ldr	r3, [sp, #28]
 213 008a 9B00     		lsls	r3, r3, #2
 214 008c 08A9     		add	r1, sp, #32
 215 008e 0B44     		add	r3, r3, r1
 216 0090 53F8183C 		ldr	r3, [r3, #-24]
 217 0094 0121     		movs	r1, #1
 218 0096 01FA03F3 		lsl	r3, r1, r3
 219 009a 9BB2     		uxth	r3, r3
 220 009c 1383     		strh	r3, [r2, #24]	@ movhi
  58:myMisc.c      ****         chThdSleepMilliseconds(blinkspeed);
 221              		.loc 1 58 0
 222 009e 2E4B     		ldr	r3, .L8+40
 223 00a0 1B68     		ldr	r3, [r3]
 224 00a2 013B     		subs	r3, r3, #1
 225 00a4 42F21072 		movw	r2, #10000
 226 00a8 02FB03F3 		mul	r3, r2, r3
 227 00ac 2B4A     		ldr	r2, .L8+44
 228 00ae 82FB0312 		smull	r1, r2, r2, r3
 229 00b2 9211     		asrs	r2, r2, #6
 230 00b4 DB17     		asrs	r3, r3, #31
 231 00b6 D31A     		subs	r3, r2, r3
 232 00b8 0133     		adds	r3, r3, #1
 233 00ba 1846     		mov	r0, r3
 234 00bc FFF7FEFF 		bl	chThdSleep
  59:myMisc.c      ****         palClearPad(GPIOD, leds[ curLed ]);
 235              		.loc 1 59 0
 236 00c0 244A     		ldr	r2, .L8+36
 237 00c2 079B     		ldr	r3, [sp, #28]
 238 00c4 9B00     		lsls	r3, r3, #2
 239 00c6 08A9     		add	r1, sp, #32
 240 00c8 0B44     		add	r3, r3, r1
 241 00ca 53F8183C 		ldr	r3, [r3, #-24]
 242 00ce 0121     		movs	r1, #1
 243 00d0 01FA03F3 		lsl	r3, r1, r3
 244 00d4 9BB2     		uxth	r3, r3
 245 00d6 5383     		strh	r3, [r2, #26]	@ movhi
  60:myMisc.c      ****         chThdSleepMilliseconds(blinkspeed);
 246              		.loc 1 60 0
 247 00d8 1F4B     		ldr	r3, .L8+40
 248 00da 1B68     		ldr	r3, [r3]
 249 00dc 013B     		subs	r3, r3, #1
 250 00de 42F21072 		movw	r2, #10000
 251 00e2 02FB03F3 		mul	r3, r2, r3
 252 00e6 1D4A     		ldr	r2, .L8+44
 253 00e8 82FB0312 		smull	r1, r2, r2, r3
 254 00ec 9211     		asrs	r2, r2, #6
 255 00ee DB17     		asrs	r3, r3, #31
 256 00f0 D31A     		subs	r3, r2, r3
 257 00f2 0133     		adds	r3, r3, #1
 258 00f4 1846     		mov	r0, r3
 259 00f6 FFF7FEFF 		bl	chThdSleep
  61:myMisc.c      **** 
  62:myMisc.c      ****         if (dir == 1 )
 260              		.loc 1 62 0
 261 00fa 154B     		ldr	r3, .L8+32
 262 00fc 1B68     		ldr	r3, [r3]
 263 00fe 012B     		cmp	r3, #1
 264 0100 07D1     		bne	.L5
  63:myMisc.c      ****         {
  64:myMisc.c      ****             curLed++;
 265              		.loc 1 64 0
 266 0102 079B     		ldr	r3, [sp, #28]
 267 0104 0133     		adds	r3, r3, #1
 268 0106 0793     		str	r3, [sp, #28]
  65:myMisc.c      ****             if (curLed > 3)
 269              		.loc 1 65 0
 270 0108 079B     		ldr	r3, [sp, #28]
 271 010a 032B     		cmp	r3, #3
 272 010c 01DD     		ble	.L5
  66:myMisc.c      ****             {
  67:myMisc.c      ****                 curLed = 0;
 273              		.loc 1 67 0
 274 010e 0023     		movs	r3, #0
 275 0110 0793     		str	r3, [sp, #28]
 276              	.L5:
  68:myMisc.c      ****             }
  69:myMisc.c      **** 
  70:myMisc.c      ****         }
  71:myMisc.c      ****         if (dir == 0)
 277              		.loc 1 71 0
 278 0112 0F4B     		ldr	r3, .L8+32
 279 0114 1B68     		ldr	r3, [r3]
 280 0116 002B     		cmp	r3, #0
 281 0118 08D1     		bne	.L6
  72:myMisc.c      ****         {
  73:myMisc.c      ****             curLed--;
 282              		.loc 1 73 0
 283 011a 079B     		ldr	r3, [sp, #28]
 284 011c 013B     		subs	r3, r3, #1
 285 011e 0793     		str	r3, [sp, #28]
  74:myMisc.c      ****             if (curLed < 0 )
 286              		.loc 1 74 0
 287 0120 079B     		ldr	r3, [sp, #28]
 288 0122 002B     		cmp	r3, #0
 289 0124 02DA     		bge	.L6
  75:myMisc.c      ****             {
  76:myMisc.c      ****                 curLed = 3;
 290              		.loc 1 76 0
 291 0126 0323     		movs	r3, #3
 292 0128 0793     		str	r3, [sp, #28]
 293              	.LBE2:
  77:myMisc.c      ****             }
  78:myMisc.c      ****         }
  79:myMisc.c      **** 
  80:myMisc.c      ****     }
 294              		.loc 1 80 0
 295 012a 7EE7     		b	.L7
 296              	.L6:
 297 012c 7DE7     		b	.L7
 298              	.L9:
 299 012e 00BF     		.align	2
 300              	.L8:
 301 0130 00000000 		.word	rlist
 302 0134 50000000 		.word	.LC11
 303 0138 00000000 		.word	led1
 304 013c 00000000 		.word	led2
 305 0140 00000000 		.word	led3
 306 0144 00000000 		.word	led4
 307 0148 00000000 		.word	presses
 308 014c 00000000 		.word	my_bsem
 309 0150 00000000 		.word	dir
 310 0154 000C0240 		.word	1073875968
 311 0158 00000000 		.word	blinkspeed
 312 015c D34D6210 		.word	274877907
 313              		.cfi_endproc
 314              	.LFE118:
 316              		.section	.text.startBlinker,"ax",%progbits
 317              		.align	2
 318              		.p2align 4,,15
 319              		.global	startBlinker
 320              		.thumb
 321              		.thumb_func
 323              	startBlinker:
 324              	.LFB119:
  81:myMisc.c      **** 
  82:myMisc.c      ****     return 0;
  83:myMisc.c      **** }
  84:myMisc.c      **** 
  85:myMisc.c      **** 
  86:myMisc.c      **** void startBlinker(void)
  87:myMisc.c      **** {
 325              		.loc 1 87 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 00B5     		push	{lr}
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 14, -4
 332 0002 83B0     		sub	sp, sp, #12
 333              		.cfi_def_cfa_offset 16
  88:myMisc.c      ****     chThdCreateStatic(waThread1, sizeof(waThread1), NORMALPRIO, Thread1, NULL);
 334              		.loc 1 88 0
 335 0004 0023     		movs	r3, #0
 336 0006 0093     		str	r3, [sp]
 337 0008 0448     		ldr	r0, .L11
 338 000a 4FF4DC71 		mov	r1, #440
 339 000e 4022     		movs	r2, #64
 340 0010 034B     		ldr	r3, .L11+4
 341 0012 FFF7FEFF 		bl	chThdCreateStatic
  89:myMisc.c      **** 
  90:myMisc.c      **** }
 342              		.loc 1 90 0
 343 0016 03B0     		add	sp, sp, #12
 344              		@ sp needed
 345 0018 5DF804FB 		ldr	pc, [sp], #4
 346              	.L12:
 347              		.align	2
 348              	.L11:
 349 001c 00000000 		.word	waThread1
 350 0020 00000000 		.word	Thread1
 351              		.cfi_endproc
 352              	.LFE119:
 354 0024 AFF30080 		.text
 354      AFF30080 
 354      AFF30080 
 355              	.Letext0:
 356              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.8/include/stddef.h"
 357              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 358              		.file 4 "/usr/include/newlib/stdint.h"
 359              		.file 5 "/usr/src/chibiostest/os/ports/GCC/ARMCMx/chtypes.h"
 360              		.file 6 "/usr/src/chibiostest/os/kernel/include/chlists.h"
 361              		.file 7 "/usr/src/chibiostest/os/kernel/include/chthreads.h"
 362              		.file 8 "/usr/src/chibiostest/os/ports/GCC/ARMCMx/chcore_v7m.h"
 363              		.file 9 "/usr/src/chibiostest/os/kernel/include/chschd.h"
 364              		.file 10 "/usr/src/chibiostest/os/kernel/include/chsem.h"
 365              		.file 11 "/usr/src/chibiostest/os/kernel/include/chbsem.h"
 366              		.file 12 "/usr/src/chibiostest/os/kernel/include/chmtx.h"
 367              		.file 13 "/usr/src/chibiostest/os/kernel/include/chevents.h"
 368              		.file 14 "/usr/src/chibiostest/os/kernel/include/chqueues.h"
 369              		.file 15 "/usr/src/chibiostest/os/kernel/include/chstreams.h"
 370              		.file 16 "/usr/src/chibiostest/os/hal/platforms/STM32/GPIOv2/pal_lld.h"
 371              		.file 17 "/usr/src/chibiostest/os/hal/include/usb.h"
 372              		.file 18 "/usr/src/chibiostest/os/hal/platforms/STM32/OTGv1/usb_lld.h"
 373              		.file 19 "/usr/src/chibiostest/os/hal/platforms/STM32/OTGv1/stm32_otg.h"
 374              		.file 20 "/usr/src/chibiostest/os/hal/include/serial_usb.h"
 375              		.file 21 "/usr/src/chibiostest/os/various/shell.h"
 376              		.file 22 "menu.h"
 377              		.file 23 "/usr/src/chibiostest/os/ports/common/ARMCMx/CMSIS/include/core_cm4.h"
 378              		.file 24 "config.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 myMisc.c
     /tmp/cctOP0Mt.s:20     .bss.SDU1:0000000000000000 $d
     /tmp/cctOP0Mt.s:23     .bss.SDU1:0000000000000000 SDU1
     /tmp/cctOP0Mt.s:26     .rodata:0000000000000000 $d
     /tmp/cctOP0Mt.s:60     .rodata.commands:0000000000000000 $d
     /tmp/cctOP0Mt.s:63     .rodata.commands:0000000000000000 commands
     /tmp/cctOP0Mt.s:89     .rodata.shell_cfg1:0000000000000000 $d
     /tmp/cctOP0Mt.s:92     .rodata.shell_cfg1:0000000000000000 shell_cfg1
     /tmp/cctOP0Mt.s:96     .bss.waThread1:0000000000000000 $d
     /tmp/cctOP0Mt.s:99     .bss.waThread1:0000000000000000 waThread1
     /tmp/cctOP0Mt.s:106    .text.Thread1:0000000000000000 $t
     /tmp/cctOP0Mt.s:111    .text.Thread1:0000000000000000 Thread1
     /tmp/cctOP0Mt.s:301    .text.Thread1:0000000000000130 $d
     /tmp/cctOP0Mt.s:317    .text.startBlinker:0000000000000000 $t
     /tmp/cctOP0Mt.s:323    .text.startBlinker:0000000000000000 startBlinker
     /tmp/cctOP0Mt.s:349    .text.startBlinker:000000000000001c $d
                     .debug_frame:0000000000000010 $d
     /tmp/cctOP0Mt.s:354    .text.startBlinker:0000000000000024 $t

UNDEFINED SYMBOLS
cmd_mem
cmd_threads
cmd_blinkspeed
cmd_way
cmd_way_ch
cmd_blinkspeed_now
cmd_blinkspeed_min
cmd_blinkspeed_max
cmd_blinkspeed_min_ch
cmd_blinkspeed_max_ch
chThdSleep
dbg_check_lock
chSemSignalI
chSchRescheduleS
dbg_check_unlock
rlist
led1
led2
led3
led4
presses
my_bsem
dir
blinkspeed
chThdCreateStatic
