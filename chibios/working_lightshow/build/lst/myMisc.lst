   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"myMisc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.SDU1,"aw",%nobits
  20              		.align	2
  23              	SDU1:
  24 0000 00000000 		.space	600
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 6D656D00 		.ascii	"mem\000"
  29              		.align	2
  30              	.LC1:
  31 0004 74687265 		.ascii	"threads\000"
  31      61647300 
  32              		.align	2
  33              	.LC2:
  34 000c 626C696E 		.ascii	"blinkspeed\000"
  34      6B737065 
  34      656400
  35 0017 00       		.align	2
  36              	.LC3:
  37 0018 627300   		.ascii	"bs\000"
  38 001b 00       		.align	2
  39              	.LC4:
  40 001c 64697200 		.ascii	"dir\000"
  41              		.align	2
  42              	.LC5:
  43 0020 64697263 		.ascii	"dirch\000"
  43      6800
  44 0026 0000     		.align	2
  45              	.LC6:
  46 0028 61637475 		.ascii	"actual\000"
  46      616C00
  47 002f 00       		.align	2
  48              	.LC7:
  49 0030 62736D69 		.ascii	"bsmin\000"
  49      6E00
  50 0036 0000     		.align	2
  51              	.LC8:
  52 0038 62736D61 		.ascii	"bsmax\000"
  52      7800
  53 003e 0000     		.align	2
  54              	.LC9:
  55 0040 62736D69 		.ascii	"bsminch\000"
  55      6E636800 
  56              		.align	2
  57              	.LC10:
  58 0048 62736D61 		.ascii	"bsmaxch\000"
  58      78636800 
  59              		.section	.rodata.commands,"a",%progbits
  60              		.align	2
  63              	commands:
  64 0000 00000000 		.word	.LC0
  65 0004 00000000 		.word	cmd_mem
  66 0008 04000000 		.word	.LC1
  67 000c 00000000 		.word	cmd_threads
  68 0010 0C000000 		.word	.LC2
  69 0014 00000000 		.word	cmd_blinkspeed
  70 0018 18000000 		.word	.LC3
  71 001c 00000000 		.word	cmd_blinkspeed
  72 0020 1C000000 		.word	.LC4
  73 0024 00000000 		.word	cmd_way
  74 0028 20000000 		.word	.LC5
  75 002c 00000000 		.word	cmd_way_ch
  76 0030 28000000 		.word	.LC6
  77 0034 00000000 		.word	cmd_blinkspeed_now
  78 0038 30000000 		.word	.LC7
  79 003c 00000000 		.word	cmd_blinkspeed_min
  80 0040 38000000 		.word	.LC8
  81 0044 00000000 		.word	cmd_blinkspeed_max
  82 0048 40000000 		.word	.LC9
  83 004c 00000000 		.word	cmd_blinkspeed_min_ch
  84 0050 48000000 		.word	.LC10
  85 0054 00000000 		.word	cmd_blinkspeed_max_ch
  86 0058 00000000 		.word	0
  87 005c 00000000 		.word	0
  88              		.section	.rodata.shell_cfg1,"a",%progbits
  89              		.align	2
  92              	shell_cfg1:
  93 0000 00000000 		.word	SDU1
  94 0004 00000000 		.word	commands
  95              		.section	.bss.waThread1,"aw",%nobits
  96              		.align	3
  99              	waThread1:
 100 0000 00000000 		.space	440
 100      00000000 
 100      00000000 
 100      00000000 
 100      00000000 
 101              		.section	.rodata
 102              		.align	2
 103              	.LC11:
 104 0050 626C696E 		.ascii	"blinker1\000"
 104      6B657231 
 104      00
 105 0059 000000   		.section	.text.Thread1,"ax",%progbits
 106              		.align	2
 107              		.p2align 4,,15
 108              		.thumb
 109              		.thumb_func
 111              	Thread1:
 112              	.LFB118:
 113              		.file 1 "myMisc.c"
   1:myMisc.c      **** #include <stdlib.h>
   2:myMisc.c      **** #include <string.h>
   3:myMisc.c      **** #include <ctype.h>
   4:myMisc.c      **** 
   5:myMisc.c      **** #include "ch.h"
   6:myMisc.c      **** #include "hal.h"
   7:myMisc.c      **** 
   8:myMisc.c      **** #include "chprintf.h"
   9:myMisc.c      **** 
  10:myMisc.c      **** #include "myMisc.h"
  11:myMisc.c      **** #include "config.h"
  12:myMisc.c      **** #include "menu.h"
  13:myMisc.c      **** #include <chsem.h>
  14:myMisc.c      **** 
  15:myMisc.c      **** 
  16:myMisc.c      **** /*===========================================================================*/
  17:myMisc.c      **** /* Generic code.															 */
  18:myMisc.c      **** /*===========================================================================*/
  19:myMisc.c      **** 
  20:myMisc.c      **** /* Virtual serial port over USB.*/
  21:myMisc.c      **** static SerialUSBDriver SDU1;
  22:myMisc.c      **** 
  23:myMisc.c      **** 
  24:myMisc.c      **** /*
  25:myMisc.c      ****  * Lightshow thread, times are in milliseconds.
  26:myMisc.c      ****  */
  27:myMisc.c      **** static WORKING_AREA(waThread1, 128);
  28:myMisc.c      **** 
  29:myMisc.c      **** static msg_t Thread1(void *arg)
  30:myMisc.c      **** {
 114              		.loc 1 30 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 32
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 00B5     		push	{lr}
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 14, -4
 121 0002 89B0     		sub	sp, sp, #36
 122              		.cfi_def_cfa_offset 40
 123 0004 0190     		str	r0, [sp, #4]
  31:myMisc.c      ****     (void)arg;
  32:myMisc.c      ****     chRegSetThreadName("blinker1");
 124              		.loc 1 32 0
 125 0006 484B     		ldr	r3, .L8
 126 0008 9B69     		ldr	r3, [r3, #24]
 127 000a 484A     		ldr	r2, .L8+4
 128 000c 9A61     		str	r2, [r3, #24]
  33:myMisc.c      **** 
  34:myMisc.c      **** 
  35:myMisc.c      **** 
  36:myMisc.c      ****     int leds[] = { led1 , led2 , led3 , led4 };
 129              		.loc 1 36 0
 130 000e 484B     		ldr	r3, .L8+8
 131 0010 1B68     		ldr	r3, [r3]
 132 0012 0293     		str	r3, [sp, #8]
 133 0014 474B     		ldr	r3, .L8+12
 134 0016 1B68     		ldr	r3, [r3]
 135 0018 0393     		str	r3, [sp, #12]
 136 001a 474B     		ldr	r3, .L8+16
 137 001c 1B68     		ldr	r3, [r3]
 138 001e 0493     		str	r3, [sp, #16]
 139 0020 464B     		ldr	r3, .L8+20
 140 0022 1B68     		ldr	r3, [r3]
 141 0024 0593     		str	r3, [sp, #20]
  37:myMisc.c      ****     int curLed = 0;
 142              		.loc 1 37 0
 143 0026 0023     		movs	r3, #0
 144 0028 0793     		str	r3, [sp, #28]
 145              	.L7:
 146              	.LBB2:
  38:myMisc.c      ****     while (TRUE)
  39:myMisc.c      ****     {
  40:myMisc.c      **** 
  41:myMisc.c      ****         if (presses == 1)
 147              		.loc 1 41 0
 148 002a 454B     		ldr	r3, .L8+24
 149 002c 1B68     		ldr	r3, [r3]
 150 002e 012B     		cmp	r3, #1
 151 0030 24D1     		bne	.L2
  42:myMisc.c      ****         {
  43:myMisc.c      ****             presses = 0;
 152              		.loc 1 43 0
 153 0032 434B     		ldr	r3, .L8+24
 154 0034 0022     		movs	r2, #0
 155 0036 1A60     		str	r2, [r3]
 156              	.LBB3:
  44:myMisc.c      ****             chBSemSignal(&my_bsem);
 157              		.loc 1 44 0
 158 0038 2023     		movs	r3, #32
 159              	@ 44 "myMisc.c" 1
 160 003a 83F31188 		msr     BASEPRI, r3
 161              	@ 0 "" 2
 162              		.thumb
 163              	.LBE3:
 164 003e FFF7FEFF 		bl	dbg_check_lock
 165 0042 404B     		ldr	r3, .L8+28
 166 0044 9B68     		ldr	r3, [r3, #8]
 167 0046 002B     		cmp	r3, #0
 168 0048 02DC     		bgt	.L3
 169              		.loc 1 44 0 is_stmt 0 discriminator 1
 170 004a 3E48     		ldr	r0, .L8+28
 171 004c FFF7FEFF 		bl	chSemSignalI
 172              	.L3:
 173              		.loc 1 44 0 discriminator 2
 174 0050 FFF7FEFF 		bl	chSchRescheduleS
 175 0054 FFF7FEFF 		bl	dbg_check_unlock
 176              	.LBB4:
 177 0058 0023     		movs	r3, #0
 178              	@ 44 "myMisc.c" 1
 179 005a 83F31188 		msr     BASEPRI, r3
 180              	@ 0 "" 2
 181              		.thumb
 182              	.LBE4:
  45:myMisc.c      ****             if(dir == 1)
 183              		.loc 1 45 0 is_stmt 1 discriminator 2
 184 005e 3A4B     		ldr	r3, .L8+32
 185 0060 1B68     		ldr	r3, [r3]
 186 0062 012B     		cmp	r3, #1
 187 0064 03D1     		bne	.L4
  46:myMisc.c      ****             {
  47:myMisc.c      ****                 dir = 0;
 188              		.loc 1 47 0
 189 0066 384B     		ldr	r3, .L8+32
 190 0068 0022     		movs	r2, #0
 191 006a 1A60     		str	r2, [r3]
 192 006c 06E0     		b	.L2
 193              	.L4:
  48:myMisc.c      ****             }
  49:myMisc.c      ****             else if(dir == 0)
 194              		.loc 1 49 0
 195 006e 364B     		ldr	r3, .L8+32
 196 0070 1B68     		ldr	r3, [r3]
 197 0072 002B     		cmp	r3, #0
 198 0074 02D1     		bne	.L2
  50:myMisc.c      ****             {
  51:myMisc.c      ****                 dir = 1;
 199              		.loc 1 51 0
 200 0076 344B     		ldr	r3, .L8+32
 201 0078 0122     		movs	r2, #1
 202 007a 1A60     		str	r2, [r3]
 203              	.L2:
  52:myMisc.c      ****             }
  53:myMisc.c      ****         }
  54:myMisc.c      **** 
  55:myMisc.c      ****         int i = 0;
 204              		.loc 1 55 0
 205 007c 0023     		movs	r3, #0
 206 007e 0693     		str	r3, [sp, #24]
  56:myMisc.c      **** 
  57:myMisc.c      ****         palSetPad(GPIOD, leds[ curLed ]);
 207              		.loc 1 57 0
 208 0080 324A     		ldr	r2, .L8+36
 209 0082 079B     		ldr	r3, [sp, #28]
 210 0084 9B00     		lsls	r3, r3, #2
 211 0086 08A9     		add	r1, sp, #32
 212 0088 0B44     		add	r3, r3, r1
 213 008a 53F8183C 		ldr	r3, [r3, #-24]
 214 008e 0121     		movs	r1, #1
 215 0090 01FA03F3 		lsl	r3, r1, r3
 216 0094 9BB2     		uxth	r3, r3
 217 0096 1383     		strh	r3, [r2, #24]	@ movhi
  58:myMisc.c      ****         chThdSleepMilliseconds(blinkspeed);
 218              		.loc 1 58 0
 219 0098 2D4B     		ldr	r3, .L8+40
 220 009a 1B68     		ldr	r3, [r3]
 221 009c 013B     		subs	r3, r3, #1
 222 009e 42F21072 		movw	r2, #10000
 223 00a2 02FB03F3 		mul	r3, r2, r3
 224 00a6 2B4A     		ldr	r2, .L8+44
 225 00a8 82FB0312 		smull	r1, r2, r2, r3
 226 00ac 9211     		asrs	r2, r2, #6
 227 00ae DB17     		asrs	r3, r3, #31
 228 00b0 D31A     		subs	r3, r2, r3
 229 00b2 0133     		adds	r3, r3, #1
 230 00b4 1846     		mov	r0, r3
 231 00b6 FFF7FEFF 		bl	chThdSleep
  59:myMisc.c      ****         palClearPad(GPIOD, leds[ curLed ]);
 232              		.loc 1 59 0
 233 00ba 244A     		ldr	r2, .L8+36
 234 00bc 079B     		ldr	r3, [sp, #28]
 235 00be 9B00     		lsls	r3, r3, #2
 236 00c0 08A9     		add	r1, sp, #32
 237 00c2 0B44     		add	r3, r3, r1
 238 00c4 53F8183C 		ldr	r3, [r3, #-24]
 239 00c8 0121     		movs	r1, #1
 240 00ca 01FA03F3 		lsl	r3, r1, r3
 241 00ce 9BB2     		uxth	r3, r3
 242 00d0 5383     		strh	r3, [r2, #26]	@ movhi
  60:myMisc.c      ****         chThdSleepMilliseconds(blinkspeed);
 243              		.loc 1 60 0
 244 00d2 1F4B     		ldr	r3, .L8+40
 245 00d4 1B68     		ldr	r3, [r3]
 246 00d6 013B     		subs	r3, r3, #1
 247 00d8 42F21072 		movw	r2, #10000
 248 00dc 02FB03F3 		mul	r3, r2, r3
 249 00e0 1C4A     		ldr	r2, .L8+44
 250 00e2 82FB0312 		smull	r1, r2, r2, r3
 251 00e6 9211     		asrs	r2, r2, #6
 252 00e8 DB17     		asrs	r3, r3, #31
 253 00ea D31A     		subs	r3, r2, r3
 254 00ec 0133     		adds	r3, r3, #1
 255 00ee 1846     		mov	r0, r3
 256 00f0 FFF7FEFF 		bl	chThdSleep
  61:myMisc.c      **** 
  62:myMisc.c      ****         if (dir == 1 )
 257              		.loc 1 62 0
 258 00f4 144B     		ldr	r3, .L8+32
 259 00f6 1B68     		ldr	r3, [r3]
 260 00f8 012B     		cmp	r3, #1
 261 00fa 07D1     		bne	.L5
  63:myMisc.c      ****         {
  64:myMisc.c      ****             curLed++;
 262              		.loc 1 64 0
 263 00fc 079B     		ldr	r3, [sp, #28]
 264 00fe 0133     		adds	r3, r3, #1
 265 0100 0793     		str	r3, [sp, #28]
  65:myMisc.c      ****             if (curLed > 3)
 266              		.loc 1 65 0
 267 0102 079B     		ldr	r3, [sp, #28]
 268 0104 032B     		cmp	r3, #3
 269 0106 01DD     		ble	.L5
  66:myMisc.c      ****             {
  67:myMisc.c      ****                 curLed = 0;
 270              		.loc 1 67 0
 271 0108 0023     		movs	r3, #0
 272 010a 0793     		str	r3, [sp, #28]
 273              	.L5:
  68:myMisc.c      ****             }
  69:myMisc.c      **** 
  70:myMisc.c      ****         }
  71:myMisc.c      ****         if (dir == 0)
 274              		.loc 1 71 0
 275 010c 0E4B     		ldr	r3, .L8+32
 276 010e 1B68     		ldr	r3, [r3]
 277 0110 002B     		cmp	r3, #0
 278 0112 08D1     		bne	.L6
  72:myMisc.c      ****         {
  73:myMisc.c      ****             curLed--;
 279              		.loc 1 73 0
 280 0114 079B     		ldr	r3, [sp, #28]
 281 0116 013B     		subs	r3, r3, #1
 282 0118 0793     		str	r3, [sp, #28]
  74:myMisc.c      ****             if (curLed < 0 )
 283              		.loc 1 74 0
 284 011a 079B     		ldr	r3, [sp, #28]
 285 011c 002B     		cmp	r3, #0
 286 011e 02DA     		bge	.L6
  75:myMisc.c      ****             {
  76:myMisc.c      ****                 curLed = 3;
 287              		.loc 1 76 0
 288 0120 0323     		movs	r3, #3
 289 0122 0793     		str	r3, [sp, #28]
 290              	.LBE2:
  77:myMisc.c      ****             }
  78:myMisc.c      ****         }
  79:myMisc.c      **** 
  80:myMisc.c      ****     }
 291              		.loc 1 80 0
 292 0124 81E7     		b	.L7
 293              	.L6:
 294 0126 80E7     		b	.L7
 295              	.L9:
 296              		.align	2
 297              	.L8:
 298 0128 00000000 		.word	rlist
 299 012c 50000000 		.word	.LC11
 300 0130 00000000 		.word	led1
 301 0134 00000000 		.word	led2
 302 0138 00000000 		.word	led3
 303 013c 00000000 		.word	led4
 304 0140 00000000 		.word	presses
 305 0144 00000000 		.word	my_bsem
 306 0148 00000000 		.word	dir
 307 014c 000C0240 		.word	1073875968
 308 0150 00000000 		.word	blinkspeed
 309 0154 D34D6210 		.word	274877907
 310              		.cfi_endproc
 311              	.LFE118:
 313 0158 AFF30080 		.section	.text.startBlinker,"ax",%progbits
 313      AFF30080 
 314              		.align	2
 315              		.p2align 4,,15
 316              		.global	startBlinker
 317              		.thumb
 318              		.thumb_func
 320              	startBlinker:
 321              	.LFB119:
  81:myMisc.c      **** 
  82:myMisc.c      ****     return 0;
  83:myMisc.c      **** }
  84:myMisc.c      **** 
  85:myMisc.c      **** 
  86:myMisc.c      **** void startBlinker(void)
  87:myMisc.c      **** {
 322              		.loc 1 87 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 00B5     		push	{lr}
 327              		.cfi_def_cfa_offset 4
 328              		.cfi_offset 14, -4
 329 0002 83B0     		sub	sp, sp, #12
 330              		.cfi_def_cfa_offset 16
  88:myMisc.c      ****     chThdCreateStatic(waThread1, sizeof(waThread1), NORMALPRIO, Thread1, NULL);
 331              		.loc 1 88 0
 332 0004 0023     		movs	r3, #0
 333 0006 0093     		str	r3, [sp]
 334 0008 0448     		ldr	r0, .L11
 335 000a 4FF4DC71 		mov	r1, #440
 336 000e 4022     		movs	r2, #64
 337 0010 034B     		ldr	r3, .L11+4
 338 0012 FFF7FEFF 		bl	chThdCreateStatic
  89:myMisc.c      **** 
  90:myMisc.c      **** }
 339              		.loc 1 90 0
 340 0016 03B0     		add	sp, sp, #12
 341              		@ sp needed
 342 0018 5DF804FB 		ldr	pc, [sp], #4
 343              	.L12:
 344              		.align	2
 345              	.L11:
 346 001c 00000000 		.word	waThread1
 347 0020 00000000 		.word	Thread1
 348              		.cfi_endproc
 349              	.LFE119:
 351 0024 AFF30080 		.text
 351      AFF30080 
 351      AFF30080 
 352              	.Letext0:
 353              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.8/include/stddef.h"
 354              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 355              		.file 4 "/usr/include/newlib/stdint.h"
 356              		.file 5 "/usr/src/chibiostest/os/ports/GCC/ARMCMx/chtypes.h"
 357              		.file 6 "/usr/src/chibiostest/os/kernel/include/chlists.h"
 358              		.file 7 "/usr/src/chibiostest/os/kernel/include/chthreads.h"
 359              		.file 8 "/usr/src/chibiostest/os/ports/GCC/ARMCMx/chcore_v7m.h"
 360              		.file 9 "/usr/src/chibiostest/os/kernel/include/chschd.h"
 361              		.file 10 "/usr/src/chibiostest/os/kernel/include/chsem.h"
 362              		.file 11 "/usr/src/chibiostest/os/kernel/include/chbsem.h"
 363              		.file 12 "/usr/src/chibiostest/os/kernel/include/chmtx.h"
 364              		.file 13 "/usr/src/chibiostest/os/kernel/include/chevents.h"
 365              		.file 14 "/usr/src/chibiostest/os/kernel/include/chqueues.h"
 366              		.file 15 "/usr/src/chibiostest/os/kernel/include/chstreams.h"
 367              		.file 16 "/usr/src/chibiostest/os/hal/platforms/STM32/GPIOv2/pal_lld.h"
 368              		.file 17 "/usr/src/chibiostest/os/hal/include/usb.h"
 369              		.file 18 "/usr/src/chibiostest/os/hal/platforms/STM32/OTGv1/usb_lld.h"
 370              		.file 19 "/usr/src/chibiostest/os/hal/platforms/STM32/OTGv1/stm32_otg.h"
 371              		.file 20 "/usr/src/chibiostest/os/hal/include/serial_usb.h"
 372              		.file 21 "/usr/src/chibiostest/os/various/shell.h"
 373              		.file 22 "menu.h"
 374              		.file 23 "/usr/src/chibiostest/os/ports/common/ARMCMx/CMSIS/include/core_cm4.h"
 375              		.file 24 "config.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 myMisc.c
     /tmp/ccRyDPPt.s:20     .bss.SDU1:0000000000000000 $d
     /tmp/ccRyDPPt.s:23     .bss.SDU1:0000000000000000 SDU1
     /tmp/ccRyDPPt.s:26     .rodata:0000000000000000 $d
     /tmp/ccRyDPPt.s:60     .rodata.commands:0000000000000000 $d
     /tmp/ccRyDPPt.s:63     .rodata.commands:0000000000000000 commands
     /tmp/ccRyDPPt.s:89     .rodata.shell_cfg1:0000000000000000 $d
     /tmp/ccRyDPPt.s:92     .rodata.shell_cfg1:0000000000000000 shell_cfg1
     /tmp/ccRyDPPt.s:96     .bss.waThread1:0000000000000000 $d
     /tmp/ccRyDPPt.s:99     .bss.waThread1:0000000000000000 waThread1
     /tmp/ccRyDPPt.s:106    .text.Thread1:0000000000000000 $t
     /tmp/ccRyDPPt.s:111    .text.Thread1:0000000000000000 Thread1
     /tmp/ccRyDPPt.s:298    .text.Thread1:0000000000000128 $d
     /tmp/ccRyDPPt.s:314    .text.startBlinker:0000000000000000 $t
     /tmp/ccRyDPPt.s:320    .text.startBlinker:0000000000000000 startBlinker
     /tmp/ccRyDPPt.s:346    .text.startBlinker:000000000000001c $d
                     .debug_frame:0000000000000010 $d
     /tmp/ccRyDPPt.s:313    .text.Thread1:0000000000000158 $t
     /tmp/ccRyDPPt.s:351    .text.startBlinker:0000000000000024 $t

UNDEFINED SYMBOLS
cmd_mem
cmd_threads
cmd_blinkspeed
cmd_way
cmd_way_ch
cmd_blinkspeed_now
cmd_blinkspeed_min
cmd_blinkspeed_max
cmd_blinkspeed_min_ch
cmd_blinkspeed_max_ch
dbg_check_lock
chSemSignalI
chSchRescheduleS
dbg_check_unlock
chThdSleep
rlist
led1
led2
led3
led4
presses
my_bsem
dir
blinkspeed
chThdCreateStatic
