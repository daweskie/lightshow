   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"chregistry.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ch_debug
  20              		.section	.rodata.ch_debug,"a",%progbits
  21              		.align	2
  24              	ch_debug:
  25 0000 6D61696E 		.ascii	"main"
  26 0004 00       		.byte	0
  27 0005 16       		.byte	22
  28 0006 4111     		.short	4417
  29 0008 04       		.byte	4
  30 0009 04       		.byte	4
  31 000a 4C       		.byte	76
  32 000b 08       		.byte	8
  33 000c 0C       		.byte	12
  34 000d 10       		.byte	16
  35 000e 14       		.byte	20
  36 000f 18       		.byte	24
  37 0010 1C       		.byte	28
  38 0011 20       		.byte	32
  39 0012 21       		.byte	33
  40 0013 22       		.byte	34
  41 0014 23       		.byte	35
  42 0015 24       		.byte	36
  43 0016 0000     		.section	.text.chRegFirstThread,"ax",%progbits
  44              		.align	2
  45              		.p2align 4,,15
  46              		.global	chRegFirstThread
  47              		.thumb
  48              		.thumb_func
  50              	chRegFirstThread:
  51              	.LFB7:
  52              		.file 1 "/usr/src/chibiostest/os/kernel/src/chregistry.c"
   1:/usr/src/chibiostest/os/kernel/src/chregistry.c **** /*
   2:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:/usr/src/chibiostest/os/kernel/src/chregistry.c ****                  2011,2012 Giovanni Di Sirio.
   4:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
   5:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     This file is part of ChibiOS/RT.
   6:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
   7:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     it under the terms of the GNU General Public License as published by
   9:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     the Free Software Foundation; either version 3 of the License, or
  10:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     (at your option) any later version.
  11:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
  12:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     GNU General Public License for more details.
  16:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
  17:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     You should have received a copy of the GNU General Public License
  18:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:/usr/src/chibiostest/os/kernel/src/chregistry.c **** */
  20:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
  21:/usr/src/chibiostest/os/kernel/src/chregistry.c **** /**
  22:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @file    chregistry.c
  23:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @brief   Threads registry code.
  24:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *
  25:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @addtogroup registry
  26:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @details Threads Registry related APIs and services.
  27:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *
  28:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          <h2>Operation mode</h2>
  29:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          The Threads Registry is a double linked list that holds all the
  30:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          active threads in the system.<br>
  31:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          Operations defined for the registry:
  32:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          - <b>First</b>, returns the first, in creation order, active thread
  33:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *            in the system.
  34:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          - <b>Next</b>, returns the next, in creation order, active thread
  35:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *            in the system.
  36:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          .
  37:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          The registry is meant to be mainly a debug feature, for example,
  38:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          using the registry a debugger can enumerate the active threads
  39:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          in any given moment or the shell can print the active threads
  40:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          and their state.<br>
  41:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          Another possible use is for centralized threads memory management,
  42:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          terminating threads can pulse an event source and an event handler
  43:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          can perform a scansion of the registry in order to recover the
  44:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          memory.
  45:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @pre     In order to use the threads registry the @p CH_USE_REGISTRY option
  46:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          must be enabled in @p chconf.h.
  47:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @{
  48:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  */
  49:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #include "ch.h"
  50:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
  51:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #if CH_USE_REGISTRY || defined(__DOXYGEN__)
  52:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
  53:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #define _offsetof(st, m)                                                     \
  54:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   ((size_t)((char *)&((st *)0)->m - (char *)0))
  55:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
  56:/usr/src/chibiostest/os/kernel/src/chregistry.c **** /*
  57:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * OS signature in ROM plus debug-related information.
  58:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  */
  59:/usr/src/chibiostest/os/kernel/src/chregistry.c **** ROMCONST chdebug_t ch_debug = {
  60:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   "main",
  61:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)0,
  62:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)sizeof (chdebug_t),
  63:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint16_t)((CH_KERNEL_MAJOR << 11) |
  64:/usr/src/chibiostest/os/kernel/src/chregistry.c ****              (CH_KERNEL_MINOR << 6) |
  65:/usr/src/chibiostest/os/kernel/src/chregistry.c ****              (CH_KERNEL_PATCH) << 0),
  66:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)sizeof (void *),
  67:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)sizeof (systime_t),
  68:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)sizeof (Thread),
  69:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_prio),
  70:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_ctx),
  71:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_newer),
  72:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_older),
  73:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_name),
  74:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #if CH_DBG_ENABLE_STACK_CHECK
  75:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_stklimit),
  76:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #else
  77:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)0,
  78:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #endif
  79:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_state),
  80:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_flags),
  81:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #if CH_USE_DYNAMIC
  82:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_refs),
  83:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #else
  84:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)0,
  85:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #endif
  86:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #if CH_TIME_QUANTUM > 0
  87:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_preempt),
  88:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #else
  89:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)0,
  90:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #endif
  91:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #if CH_DBG_THREADS_PROFILING
  92:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_time)
  93:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #else
  94:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   (uint8_t)0
  95:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #endif
  96:/usr/src/chibiostest/os/kernel/src/chregistry.c **** };
  97:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
  98:/usr/src/chibiostest/os/kernel/src/chregistry.c **** /**
  99:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @brief   Returns the first thread in the system.
 100:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @details Returns the most ancient thread in the system, usually this is
 101:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          the main thread unless it terminated. A reference is added to the
 102:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          returned thread in order to make sure its status is not lost.
 103:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @note    This function cannot return @p NULL because there is always at
 104:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          least one thread in the system.
 105:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *
 106:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @return              A reference to the most ancient thread.
 107:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *
 108:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @api
 109:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  */
 110:/usr/src/chibiostest/os/kernel/src/chregistry.c **** Thread *chRegFirstThread(void) {
  53              		.loc 1 110 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 8
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0000 00B5     		push	{lr}
  58              		.cfi_def_cfa_offset 4
  59              		.cfi_offset 14, -4
  60 0002 83B0     		sub	sp, sp, #12
  61              		.cfi_def_cfa_offset 16
  62              	.LBB2:
 111:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   Thread *tp;
 112:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
 113:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   chSysLock();
  63              		.loc 1 113 0
  64 0004 2023     		movs	r3, #32
  65              	@ 113 "/usr/src/chibiostest/os/kernel/src/chregistry.c" 1
  66 0006 83F31188 		msr     BASEPRI, r3
  67              	@ 0 "" 2
  68              		.thumb
  69              	.LBE2:
  70 000a FFF7FEFF 		bl	dbg_check_lock
 114:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   tp = rlist.r_newer;
  71              		.loc 1 114 0
  72 000e 0A4B     		ldr	r3, .L3
  73 0010 1B69     		ldr	r3, [r3, #16]
  74 0012 0193     		str	r3, [sp, #4]
 115:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #if CH_USE_DYNAMIC
 116:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   tp->p_refs++;
  75              		.loc 1 116 0
  76 0014 019B     		ldr	r3, [sp, #4]
  77 0016 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
  78 001a 0133     		adds	r3, r3, #1
  79 001c DAB2     		uxtb	r2, r3
  80 001e 019B     		ldr	r3, [sp, #4]
  81 0020 83F82220 		strb	r2, [r3, #34]
 117:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #endif
 118:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   chSysUnlock();
  82              		.loc 1 118 0
  83 0024 FFF7FEFF 		bl	dbg_check_unlock
  84              	.LBB3:
  85 0028 0023     		movs	r3, #0
  86              	@ 118 "/usr/src/chibiostest/os/kernel/src/chregistry.c" 1
  87 002a 83F31188 		msr     BASEPRI, r3
  88              	@ 0 "" 2
  89              		.thumb
  90              	.LBE3:
 119:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   return tp;
  91              		.loc 1 119 0
  92 002e 019B     		ldr	r3, [sp, #4]
 120:/usr/src/chibiostest/os/kernel/src/chregistry.c **** }
  93              		.loc 1 120 0
  94 0030 1846     		mov	r0, r3
  95 0032 03B0     		add	sp, sp, #12
  96              		@ sp needed
  97 0034 5DF804FB 		ldr	pc, [sp], #4
  98              	.L4:
  99              		.align	2
 100              	.L3:
 101 0038 00000000 		.word	rlist
 102              		.cfi_endproc
 103              	.LFE7:
 105 003c AFF30080 		.section	.rodata
 106              		.align	2
 107              	.LC0:
 108 0000 63685265 		.ascii	"chRegNextThread(), #1\000"
 108      674E6578 
 108      74546872 
 108      65616428 
 108      292C2023 
 109 0016 0000     		.section	.text.chRegNextThread,"ax",%progbits
 110              		.align	2
 111              		.p2align 4,,15
 112              		.global	chRegNextThread
 113              		.thumb
 114              		.thumb_func
 116              	chRegNextThread:
 117              	.LFB8:
 121:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
 122:/usr/src/chibiostest/os/kernel/src/chregistry.c **** /**
 123:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @brief   Returns the thread next to the specified one.
 124:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @details The reference counter of the specified thread is decremented and
 125:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *          the reference counter of the returned thread is incremented.
 126:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *
 127:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @param[in] tp        pointer to the thread
 128:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @return              A reference to the next thread.
 129:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @retval NULL         if there is no next thread.
 130:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  *
 131:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  * @api
 132:/usr/src/chibiostest/os/kernel/src/chregistry.c ****  */
 133:/usr/src/chibiostest/os/kernel/src/chregistry.c **** Thread *chRegNextThread(Thread *tp) {
 118              		.loc 1 133 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 16
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 00B5     		push	{lr}
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 14, -4
 125 0002 85B0     		sub	sp, sp, #20
 126              		.cfi_def_cfa_offset 24
 127 0004 0190     		str	r0, [sp, #4]
 128              	.LBB4:
 134:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   Thread *ntp;
 135:/usr/src/chibiostest/os/kernel/src/chregistry.c **** 
 136:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   chSysLock();
 129              		.loc 1 136 0
 130 0006 2023     		movs	r3, #32
 131              	@ 136 "/usr/src/chibiostest/os/kernel/src/chregistry.c" 1
 132 0008 83F31188 		msr     BASEPRI, r3
 133              	@ 0 "" 2
 134              		.thumb
 135              	.LBE4:
 136 000c FFF7FEFF 		bl	dbg_check_lock
 137:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   ntp = tp->p_newer;
 137              		.loc 1 137 0
 138 0010 019B     		ldr	r3, [sp, #4]
 139 0012 1B69     		ldr	r3, [r3, #16]
 140 0014 0393     		str	r3, [sp, #12]
 138:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   if (ntp == (Thread *)&rlist)
 141              		.loc 1 138 0
 142 0016 039A     		ldr	r2, [sp, #12]
 143 0018 114B     		ldr	r3, .L10
 144 001a 9A42     		cmp	r2, r3
 145 001c 02D1     		bne	.L6
 139:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     ntp = NULL;
 146              		.loc 1 139 0
 147 001e 0023     		movs	r3, #0
 148 0020 0393     		str	r3, [sp, #12]
 149 0022 0FE0     		b	.L7
 150              	.L6:
 140:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #if CH_USE_DYNAMIC
 141:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   else {
 142:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     chDbgAssert(ntp->p_refs < 255, "chRegNextThread(), #1",
 151              		.loc 1 142 0
 152 0024 039B     		ldr	r3, [sp, #12]
 153 0026 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 154 002a FF2B     		cmp	r3, #255
 155 002c 02D1     		bne	.L8
 156              		.loc 1 142 0 is_stmt 0 discriminator 1
 157 002e 0D48     		ldr	r0, .L10+4
 158 0030 FFF7FEFF 		bl	chDbgPanic
 159              	.L8:
 143:/usr/src/chibiostest/os/kernel/src/chregistry.c ****                 "too many references");
 144:/usr/src/chibiostest/os/kernel/src/chregistry.c ****     ntp->p_refs++;
 160              		.loc 1 144 0 is_stmt 1
 161 0034 039B     		ldr	r3, [sp, #12]
 162 0036 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 163 003a 0133     		adds	r3, r3, #1
 164 003c DAB2     		uxtb	r2, r3
 165 003e 039B     		ldr	r3, [sp, #12]
 166 0040 83F82220 		strb	r2, [r3, #34]
 167              	.L7:
 145:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   }
 146:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #endif
 147:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   chSysUnlock();
 168              		.loc 1 147 0
 169 0044 FFF7FEFF 		bl	dbg_check_unlock
 170              	.LBB5:
 171 0048 0023     		movs	r3, #0
 172              	@ 147 "/usr/src/chibiostest/os/kernel/src/chregistry.c" 1
 173 004a 83F31188 		msr     BASEPRI, r3
 174              	@ 0 "" 2
 175              		.thumb
 176              	.LBE5:
 148:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #if CH_USE_DYNAMIC
 149:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   chThdRelease(tp);
 177              		.loc 1 149 0
 178 004e 0198     		ldr	r0, [sp, #4]
 179 0050 FFF7FEFF 		bl	chThdRelease
 150:/usr/src/chibiostest/os/kernel/src/chregistry.c **** #endif
 151:/usr/src/chibiostest/os/kernel/src/chregistry.c ****   return ntp;
 180              		.loc 1 151 0
 181 0054 039B     		ldr	r3, [sp, #12]
 152:/usr/src/chibiostest/os/kernel/src/chregistry.c **** }
 182              		.loc 1 152 0
 183 0056 1846     		mov	r0, r3
 184 0058 05B0     		add	sp, sp, #20
 185              		@ sp needed
 186 005a 5DF804FB 		ldr	pc, [sp], #4
 187              	.L11:
 188 005e 00BF     		.align	2
 189              	.L10:
 190 0060 00000000 		.word	rlist
 191 0064 00000000 		.word	.LC0
 192              		.cfi_endproc
 193              	.LFE8:
 195 0068 AFF30080 		.text
 195      AFF30080 
 196              	.Letext0:
 197              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.8/include/stddef.h"
 198              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 199              		.file 4 "/usr/include/newlib/stdint.h"
 200              		.file 5 "/usr/src/chibiostest/os/ports/GCC/ARMCMx/chtypes.h"
 201              		.file 6 "/usr/src/chibiostest/os/kernel/include/chlists.h"
 202              		.file 7 "/usr/src/chibiostest/os/kernel/include/chthreads.h"
 203              		.file 8 "/usr/src/chibiostest/os/ports/GCC/ARMCMx/chcore_v7m.h"
 204              		.file 9 "/usr/src/chibiostest/os/kernel/include/chschd.h"
 205              		.file 10 "/usr/src/chibiostest/os/kernel/include/chmtx.h"
 206              		.file 11 "/usr/src/chibiostest/os/kernel/include/chregistry.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chregistry.c
     /tmp/ccT0Y05o.s:24     .rodata.ch_debug:0000000000000000 ch_debug
     /tmp/ccT0Y05o.s:21     .rodata.ch_debug:0000000000000000 $d
     /tmp/ccT0Y05o.s:44     .text.chRegFirstThread:0000000000000000 $t
     /tmp/ccT0Y05o.s:50     .text.chRegFirstThread:0000000000000000 chRegFirstThread
     /tmp/ccT0Y05o.s:101    .text.chRegFirstThread:0000000000000038 $d
     /tmp/ccT0Y05o.s:106    .rodata:0000000000000000 $d
     /tmp/ccT0Y05o.s:110    .text.chRegNextThread:0000000000000000 $t
     /tmp/ccT0Y05o.s:116    .text.chRegNextThread:0000000000000000 chRegNextThread
     /tmp/ccT0Y05o.s:190    .text.chRegNextThread:0000000000000060 $d
                     .debug_frame:0000000000000010 $d
     /tmp/ccT0Y05o.s:105    .text.chRegFirstThread:000000000000003c $t
     /tmp/ccT0Y05o.s:195    .text.chRegNextThread:0000000000000068 $t

UNDEFINED SYMBOLS
dbg_check_lock
dbg_check_unlock
rlist
chDbgPanic
chThdRelease
