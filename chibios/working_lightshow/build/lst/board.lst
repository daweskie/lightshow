   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"board.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	pal_default_config
  20              		.section	.rodata.pal_default_config,"a",%progbits
  21              		.align	2
  24              	pal_default_config:
  25 0000 00AAA02A 		.word	715172352
  26 0004 00000000 		.word	0
  27 0008 FFABFFFF 		.word	-21505
  28 000c 54000140 		.word	1073807444
  29 0010 FFFF0000 		.word	65535
  30 0014 00005655 		.word	1431699456
  31 0018 00AA0A00 		.word	698880
  32 001c 80200800 		.word	532608
  33 0020 40020000 		.word	576
  34 0024 FFFFFFFF 		.word	-1
  35 0028 15455155 		.word	1431389461
  36 002c FFFF0000 		.word	65535
  37 0030 00000004 		.word	67108864
  38 0034 40000000 		.word	64
  39 0038 01802002 		.word	35684353
  40 003c 00000000 		.word	0
  41 0040 FFFFFFFF 		.word	-1
  42 0044 54154554 		.word	1413813588
  43 0048 FFFF0000 		.word	65535
  44 004c 00000060 		.word	1610612736
  45 0050 00060600 		.word	394752
  46 0054 00010055 		.word	1426063616
  47 0058 00000000 		.word	0
  48 005c FFFFFFFF 		.word	-1
  49 0060 55501500 		.word	1396821
  50 0064 FF0F0000 		.word	4095
  51 0068 00000000 		.word	0
  52 006c 00000000 		.word	0
  53 0070 40000000 		.word	64
  54 0074 00000000 		.word	0
  55 0078 FFFFFFFF 		.word	-1
  56 007c 00000000 		.word	0
  57 0080 FFFF0000 		.word	65535
  58 0084 00000000 		.word	0
  59 0088 00000000 		.word	0
  60 008c 00000000 		.word	0
  61 0090 00000000 		.word	0
  62 0094 FFFFFFFF 		.word	-1
  63 0098 00000000 		.word	0
  64 009c FFFF0000 		.word	65535
  65 00a0 00000000 		.word	0
  66 00a4 00000000 		.word	0
  67 00a8 00000000 		.word	0
  68 00ac 00000000 		.word	0
  69 00b0 FFFFFFFF 		.word	-1
  70 00b4 00000000 		.word	0
  71 00b8 FFFF0000 		.word	65535
  72 00bc 00000000 		.word	0
  73 00c0 00000000 		.word	0
  74 00c4 00000000 		.word	0
  75 00c8 00000000 		.word	0
  76 00cc FFFFFFFF 		.word	-1
  77 00d0 00000000 		.word	0
  78 00d4 FFFF0000 		.word	65535
  79 00d8 00000000 		.word	0
  80 00dc 00000000 		.word	0
  81 00e0 00000000 		.word	0
  82 00e4 00000000 		.word	0
  83 00e8 FFFFFFFF 		.word	-1
  84 00ec 00000000 		.word	0
  85 00f0 FFFF0000 		.word	65535
  86 00f4 00000000 		.word	0
  87 00f8 00000000 		.word	0
  88              		.section	.text.__early_init,"ax",%progbits
  89              		.align	2
  90              		.p2align 4,,15
  91              		.global	__early_init
  92              		.thumb
  93              		.thumb_func
  95              	__early_init:
  96              	.LFB118:
  97              		.file 1 "board.c"
   1:board.c       **** /*
   2:board.c       ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:board.c       ****                  2011,2012 Giovanni Di Sirio.
   4:board.c       **** 
   5:board.c       ****     This file is part of ChibiOS/RT.
   6:board.c       **** 
   7:board.c       ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:board.c       ****     it under the terms of the GNU General Public License as published by
   9:board.c       ****     the Free Software Foundation; either version 3 of the License, or
  10:board.c       ****     (at your option) any later version.
  11:board.c       **** 
  12:board.c       ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:board.c       ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:board.c       ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:board.c       ****     GNU General Public License for more details.
  16:board.c       **** 
  17:board.c       ****     You should have received a copy of the GNU General Public License
  18:board.c       ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:board.c       **** */
  20:board.c       **** 
  21:board.c       **** #include "ch.h"
  22:board.c       **** #include "hal.h"
  23:board.c       **** 
  24:board.c       **** #if HAL_USE_PAL || defined(__DOXYGEN__)
  25:board.c       **** /**
  26:board.c       ****  * @brief   PAL setup.
  27:board.c       ****  * @details Digital I/O ports static configuration as defined in @p board.h.
  28:board.c       ****  *          This variable is used by the HAL when initializing the PAL driver.
  29:board.c       ****  */
  30:board.c       **** const PALConfig pal_default_config =
  31:board.c       **** {
  32:board.c       ****   {VAL_GPIOA_MODER, VAL_GPIOA_OTYPER, VAL_GPIOA_OSPEEDR, VAL_GPIOA_PUPDR,
  33:board.c       ****    VAL_GPIOA_ODR,   VAL_GPIOA_AFRL,   VAL_GPIOA_AFRH},
  34:board.c       ****   {VAL_GPIOB_MODER, VAL_GPIOB_OTYPER, VAL_GPIOB_OSPEEDR, VAL_GPIOB_PUPDR,
  35:board.c       ****    VAL_GPIOB_ODR,   VAL_GPIOB_AFRL,   VAL_GPIOB_AFRH},
  36:board.c       ****   {VAL_GPIOC_MODER, VAL_GPIOC_OTYPER, VAL_GPIOC_OSPEEDR, VAL_GPIOC_PUPDR,
  37:board.c       ****    VAL_GPIOC_ODR,   VAL_GPIOC_AFRL,   VAL_GPIOC_AFRH},
  38:board.c       ****   {VAL_GPIOD_MODER, VAL_GPIOD_OTYPER, VAL_GPIOD_OSPEEDR, VAL_GPIOD_PUPDR,
  39:board.c       ****    VAL_GPIOD_ODR,   VAL_GPIOD_AFRL,   VAL_GPIOD_AFRH},
  40:board.c       ****   {VAL_GPIOE_MODER, VAL_GPIOE_OTYPER, VAL_GPIOE_OSPEEDR, VAL_GPIOE_PUPDR,
  41:board.c       ****    VAL_GPIOE_ODR,   VAL_GPIOE_AFRL,   VAL_GPIOE_AFRH},
  42:board.c       ****   {VAL_GPIOF_MODER, VAL_GPIOF_OTYPER, VAL_GPIOF_OSPEEDR, VAL_GPIOF_PUPDR,
  43:board.c       ****    VAL_GPIOF_ODR,   VAL_GPIOF_AFRL,   VAL_GPIOF_AFRH},
  44:board.c       ****   {VAL_GPIOG_MODER, VAL_GPIOG_OTYPER, VAL_GPIOG_OSPEEDR, VAL_GPIOG_PUPDR,
  45:board.c       ****    VAL_GPIOG_ODR,   VAL_GPIOG_AFRL,   VAL_GPIOG_AFRH},
  46:board.c       ****   {VAL_GPIOH_MODER, VAL_GPIOH_OTYPER, VAL_GPIOH_OSPEEDR, VAL_GPIOH_PUPDR,
  47:board.c       ****    VAL_GPIOH_ODR,   VAL_GPIOH_AFRL,   VAL_GPIOH_AFRH},
  48:board.c       ****   {VAL_GPIOI_MODER, VAL_GPIOI_OTYPER, VAL_GPIOI_OSPEEDR, VAL_GPIOI_PUPDR,
  49:board.c       ****    VAL_GPIOI_ODR,   VAL_GPIOI_AFRL,   VAL_GPIOI_AFRH}
  50:board.c       **** };
  51:board.c       **** #endif
  52:board.c       **** 
  53:board.c       **** /**
  54:board.c       ****  * @brief   Early initialization code.
  55:board.c       ****  * @details This initialization must be performed just after stack setup
  56:board.c       ****  *          and before any other initialization.
  57:board.c       ****  */
  58:board.c       **** void __early_init(void) {
  98              		.loc 1 58 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102 0000 08B5     		push	{r3, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 3, -8
 105              		.cfi_offset 14, -4
  59:board.c       **** 
  60:board.c       ****   stm32_clock_init();
 106              		.loc 1 60 0
 107 0002 FFF7FEFF 		bl	stm32_clock_init
  61:board.c       **** }
 108              		.loc 1 61 0
 109 0006 08BD     		pop	{r3, pc}
 110              		.cfi_endproc
 111              	.LFE118:
 113 0008 AFF30080 		.section	.text.boardInit,"ax",%progbits
 113      AFF30080 
 114              		.align	2
 115              		.p2align 4,,15
 116              		.global	boardInit
 117              		.thumb
 118              		.thumb_func
 120              	boardInit:
 121              	.LFB119:
  62:board.c       **** 
  63:board.c       **** #if HAL_USE_SDC || defined(__DOXYGEN__)
  64:board.c       **** /**
  65:board.c       ****  * @brief   SDC card detection.
  66:board.c       ****  */
  67:board.c       **** bool_t sdc_lld_is_card_inserted(SDCDriver *sdcp) {
  68:board.c       **** 
  69:board.c       ****   (void)sdcp;
  70:board.c       ****   /* TODO: Fill the implementation.*/
  71:board.c       ****   return TRUE;
  72:board.c       **** }
  73:board.c       **** 
  74:board.c       **** /**
  75:board.c       ****  * @brief   SDC card write protection detection.
  76:board.c       ****  */
  77:board.c       **** bool_t sdc_lld_is_write_protected(SDCDriver *sdcp) {
  78:board.c       **** 
  79:board.c       ****   (void)sdcp;
  80:board.c       ****   /* TODO: Fill the implementation.*/
  81:board.c       ****   return FALSE;
  82:board.c       **** }
  83:board.c       **** #endif /* HAL_USE_SDC */
  84:board.c       **** 
  85:board.c       **** #if HAL_USE_MMC_SPI || defined(__DOXYGEN__)
  86:board.c       **** /**
  87:board.c       ****  * @brief   MMC_SPI card detection.
  88:board.c       ****  */
  89:board.c       **** bool_t mmc_lld_is_card_inserted(MMCDriver *mmcp) {
  90:board.c       **** 
  91:board.c       ****   (void)mmcp;
  92:board.c       ****   /* TODO: Fill the implementation.*/
  93:board.c       ****   return TRUE;
  94:board.c       **** }
  95:board.c       **** 
  96:board.c       **** /**
  97:board.c       ****  * @brief   MMC_SPI card write protection detection.
  98:board.c       ****  */
  99:board.c       **** bool_t mmc_lld_is_write_protected(MMCDriver *mmcp) {
 100:board.c       **** 
 101:board.c       ****   (void)mmcp;
 102:board.c       ****   /* TODO: Fill the implementation.*/
 103:board.c       ****   return FALSE;
 104:board.c       **** }
 105:board.c       **** #endif
 106:board.c       **** 
 107:board.c       **** /**
 108:board.c       ****  * @brief   Board-specific initialization code.
 109:board.c       ****  * @todo    Add your board-specific code, if any.
 110:board.c       ****  */
 111:board.c       **** void boardInit(void) {
 122              		.loc 1 111 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 112:board.c       **** }
 127              		.loc 1 112 0
 128 0000 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE119:
 132 0002 00BFAFF3 		.text
 132      0080AFF3 
 132      0080AFF3 
 132      0080
 133              	.Letext0:
 134              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 135              		.file 3 "/usr/include/newlib/stdint.h"
 136              		.file 4 "/usr/src/chibiostest/os/hal/platforms/STM32/GPIOv2/pal_lld.h"
 137              		.file 5 "/usr/src/chibiostest/os/ports/common/ARMCMx/CMSIS/include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 board.c
     /tmp/cchBnflj.s:24     .rodata.pal_default_config:0000000000000000 pal_default_config
     /tmp/cchBnflj.s:21     .rodata.pal_default_config:0000000000000000 $d
     /tmp/cchBnflj.s:89     .text.__early_init:0000000000000000 $t
     /tmp/cchBnflj.s:95     .text.__early_init:0000000000000000 __early_init
     /tmp/cchBnflj.s:114    .text.boardInit:0000000000000000 $t
     /tmp/cchBnflj.s:120    .text.boardInit:0000000000000000 boardInit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
stm32_clock_init
